                                                  <%= javascript_include_tag "jquery-ui-min.js" %>
<%= javascript_include_tag "jquery.selectlist.pack.js" %>
<%= javascript_include_tag "json2.js" %>
<%= stylesheet_link_tag "new_charge.css" %>
<%= stylesheet_link_tag "selectlist.css" %>
<%= stylesheet_link_tag "jquery-ui-1.8.5.custom.css" %>
<%= stylesheet_link_tag("patient_buttons.css")%>

  <%= form_tag add_charges_path,:id=>'new_charge', :method => :put do %>
    <% @procedure_list = Procedure.find(:all, :order => "procedure_name") %>
    <%= hidden_field_tag :patient_id,charge.patient_id %>

   <script type="text/javascript" charset="utf-8">

     var procedureArray=[];
     var procedureObj = "";
     var selectionObj;

    $(document).ready(function () { 
       console.log("jQuery Ready\n");

       $('select').selectList({ 

              duplicates:true,

              onAdd: function (select, value, text) {
                    selectionObj = {};
                    selectionObj.charge_id = value;
                    selectionObj.charge_description = text;

                 var returnObj = getOptionsAJAX(value);

                     if(returnObj.length>0){   // We have options, need to show window

                       for (key in returnObj){

                         var typesVar=[];

                            for (t in returnObj[key].types){  typesVar.push(returnObj[key].types[t].id); }
                             
                             // Create a button for an option
                             var optionButton = $("<button>").attr("value",returnObj[key].value).attr("optionID",returnObj[key].id).attr("id","option["+returnObj[key].id+"]").addClass("positive").attr("arrayOfTypes",typesVar).text(returnObj[key].description)
                             .click(function(){    

                                        selectionObj.option_id = $(this).attr("optionID")
                                        selectionObj.option_description = $(this).text();

                                        //  If there are more then one Types we need to enumerate them
                                        //  and open a modal window, otherwise we need need to assign the 
                                        //  current option to the selectedObj object :) 

                              if($(this).attr("arrayOfTypes").split(",").length>1){
                                 getTypesViaAJAX($(this).attr("arrayOfTypes").split(","));
                                 showTypesDiv();
                               }else{
                                 selectionObj.type_description = $(this).text();
                                 // procedureArray.push(JSON.stringify(selectionObj));
                                 $("#optionsDialog").dialog("close");
                               }
                             });


                             $("#optionsDiv").append(optionButton);
                             $("#optionsDiv").append("<br/>"); 
                       }
                       // Show the option Modal window
                       showOptionsDiv();

                     } else {   
                       console.log("[DEBUG]==> Selected charge has no options"); 
                       procedureArray.push(JSON.stringify(selectionObj));   
                       console.error(procedureArray);
                       }
                      console.log("[DEBUG] onAdd FINAL OBJECT ==> " + JSON.stringify(selectionObj));
                      console.error(procedureArray);
              },
              onRemove: function (select, value, text) {  
                 var idx = procedureArray.lastIndexOf(value); // Find the index
                 if(idx!=-1) procedureArray.splice(idx, 1); 
                 console.log("[Debug] onRemove ==> [ "+value+" ] : New Array =>" + procedureArray);
              }
       });

    });

    // Show the optiosn dialog div 
    function showOptionsDiv(){
      $("#optionsDialog").dialog({
                        modal:true,
                        width:500,
                        position: [10,10],
                        title: 'Select Option',
                        closeOnEscape: false,
                        open: function(){
                          console.log("Options Modal Open"); 
                        }, 
                        beforeClose: function(){
                        //
                        },
                        close: function(){
                          $("#optionsDiv").html("");
                          console.log("Options Modal Closed | JSON ==> " + JSON.stringify(selectionObj));    
                          //procedureArray.push(JSON.stringify(selectionObj));  
                          procedureArray.push(JSON.stringify(selectionObj));   
                          console.error(procedureArray);
                        }
                      });
    }
    // Show the types dialog div 
    function showTypesDiv(){
      $("#typesDialog").dialog({
                      modal:true,
                      width:500,
                      closeOnEscape: false,
                      position: [10,10],
                      title: 'Select Type',
                      open: function(){
                        console.log("Type Modal Open"); 
                      }, 
                      beforeClose: function(){
                      // 
                      },
                      close: function(){
                        $("#typesDiv").html("");
                        console.log("Types Modal Closed | JSON ==> " + JSON.stringify(selectionObj));
                      }
                    });
    }

    function showLocationDiv(){
      $("#locationDialog").dialog({
                      modal:true,
                      width:500,
                      closeOnEscape: false,
                      position: [10,10],
                      title: 'Select Location?',
                      open: function(){
                        console.log("Location Modal Open");
                          $("#typesDialog").dialog("close");
                      }, 
                      beforeClose: function(){
                      // 
                      },
                      close: function(){
                        $("#locationDiv").html("");
                        $("#optionsDialog").dialog("close");
                        console.log("Location Modal Closed | JSON ==> " + JSON.stringify(selectionObj));
                      }
                    });
    }

    function createLocationModal(value){
       if(lateralDirection(value).length>1){                
         //Render buttons
         for(k in lateralDirection(value)){
          
           var left_or_right_button = $("<button>")
            .addClass("positive")
            .attr("location",lateralDirection(value)[k])
            .text(lateralDirection(value)[k])
            .click(function(){
              selectionObj.location = $(this).attr('location');
              $("#locationDialog").dialog("close");
            })

            $("#locationDiv").append(left_or_right_button); 
         }
         showLocationDiv();
       }else{
         $("#typesDialog").dialog("close");
         $("#optionsDialog").dialog("close");
         
       }

    }

    function getTypesViaAJAX(array){ 
          for(k in array){
            $.ajax({
               url: "/types/"+array[k]+".json",
               type: "GET",
               cache: false,
               async:false,
               processData: false, 
               success: function(json){
                  for(v in json){
                    console.log("\t "+ json[v].id);

                     var button = $("<button>")
                      .attr("value",json[v].value)
                      .attr("typeID",json[v].id)
                      .attr("id","type["+json[v].id+"]")
                      .addClass("positive")
                      .text(json[v].description)
                      .click(function(){
                        
                        // Append to Object
                        selectionObj.type_id = $(this).attr("typeID")
                        selectionObj.type_description = $(this).text();
                        
                        createLocationModal(json[v].location);

                      });
                      $("#typesDiv").append(button); 
                      $("#typesDiv").append("<br/>");

                  }
               }
             });
          }
    }

    function getOptionsAJAX(value){
         var optionsArr=[] 

         $.ajax({
            url: "/procedures/"+value+".json",
            type: "GET",
            cache: false,
            async:false,
            processData: false, 
            success: function(json){
              $.each(json.procedure.options,function(k,value) { 
                var optionsObject={};
                optionsObject.value=value.option.value;
                optionsObject.description=value.option.description;
                optionsObject.id=value.option.id;
                optionsObject.option_id=value.option.option_id;
                optionsObject.types=[];

                 $.each(value.option.types,function(key, value) {
                   var typesObject={};
                  typesObject.value=value.type.value;
                  typesObject.location=lateralDirection(value.type.location);
                  typesObject.description=value.type.description;
                  typesObject.id=value.type.id;

                  optionsObject.types.push(typesObject);
                 });

                optionsArr.push(optionsObject);

              })
            },
            complete: function(){  console.log("AJAX fetch complete"); }
         });
            return optionsArr;
    }

    function lateralDirection(value){
         laterality=[]
         switch (value.toLowerCase()){
           case "left":
             laterality.push("Left");
             break;
           case "right": 
             laterality.push("Right");
             break;
           case "both":
              laterality.push("Left");
              laterality.push("Right");
              break;
           default: "Error";
         }

         return laterality; 
    }

   </script>

   <%= collection_select :patient, :id, Procedure.all, :id, :procedure_name,{},{:multiple=>true,:title=>"Select Procedures",:location=>"",:type=>"",:option=>""}%> 

   <input type="hidden" id="data_to_post" name="procedure_ids" value=""> 
   <% end %>

   <div id="optionsDialog" title="Add Option" style="display:none"> 
     <div id="optionsDiv"></div>
   </div>

   <div id="typesDialog" title="Add Type" style="display:none"> 
     <div id="typesDiv"></div>
   </div>

   <div id="locationDialog" title="Location" style="display:none"> 
     <div id="locationDiv"></div>
   </div>
s