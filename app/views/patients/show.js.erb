   
  var procedureArray=[];
  var myNotes=[];
  var procedureObj = "";

    $(document).ready(function () { 
      console.log("jQuery Ready\n");
      $('select').selectList({ 
           duplicates:true,
           
           onAdd: function (select, value, text) {
            procedureArray.push(value);

              var returnObj = getOptionsAJAX(value);

                  if(returnObj.length>0){
                    for (key in returnObj){

                      var typesVar=[];
                         for (t in returnObj[key].types){
                           typesVar.push(returnObj[key].types[t].id);
                          }

                          var button1 = $("<button>")
                          .attr("value",returnObj[key].description)
                          .attr("optionID",returnObj[key].id)
                          .attr("id","option["+returnObj[key].id+"]")
                          .addClass("positive")
                          .attr("arrayOfTypes",typesVar)
                          .text(returnObj[key].description)
                          .click(function(){
                            
                            if($(this).attr("arrayOfTypes").split(",").length>1){
                              getTypesViaAJAX($(this).attr("arrayOfTypes").split(","));
                              showTypesDiv();
                            }

                          });

                          $("#optionsDiv").append(button1);
                          $("#optionsDiv").append("<br/>"); 

                   //   $("#optionsDiv").append("<button value='" + returnObj[key].description + "' optionID='"+returnObj[key].id+"' id='option["+returnObj[key].id+"]' class='positive'>" +returnObj[key].description + "</button>");

                         /*
                            console.log("ID:\t\t" + returnObj[key].id);
                            console.log("Desc:\t\t" + returnObj[key].description);
                            console.log("Value:\t\t" + returnObj[key].value);  
                            console.log(""); 
                         */
                         var arrayOfTypes = [];
                        
                    } 
                    showOptionsDiv();

                    console.log(returnObj);
                    
                     
                  } else {
                    // returnObj == 0
                    console.log("@@ NO OPTIONS");
                  }

           },
           onRemove: function (select, value, text) {  
              var idx = procedureArray.lastIndexOf(value); // Find the index
              if(idx!=-1) procedureArray.splice(idx, 1); 
              console.log("\tARRAY:" + procedureArray);
           }
      });
    });

    // Show the optiosn dialog div 
    function showOptionsDiv(){
      $("#optionsDialog").dialog({
                          modal:true,
                          width:500,
                          position: [10,10],
                          open: function(){
                           console.log("Options Dialog Open"); 
                          },
                          close: function(){
                            $("#optionsDiv").html("");
                          }
                       });
    }

    // Show the types dialog div 
    function showTypesDiv(){
      $("#typesDialog").dialog({
                          modal:true,
                          width:500,
                          position: [10,10],
                          close: function(){
                            $("#typesDiv").html("");
                          }
                       });
    }
           

function getTypesViaAJAX(array){ 
  for(k in array){
    console.log("@@ Array " + array[k]);
    $.ajax({
       url: "/types/"+array[k]+".json",
       type: "GET",
       cache: false,
       async:false,
       processData: false, 
       success: function(json){
          for(v in json){
            console.log("\t "+ json[v].id);
            
             var button = $("<button>")
              .attr("value",json[v].description)
              .attr("optionID",json[v].id)
              .attr("id","option["+json[v].id+"]")
              .addClass("positive")
              .text(json[v].description)
              .click(function(){
                console.log($(this));
              });
              $("#typesDiv").append(button); 
              $("#typesDiv").append("<br/>");
              
          }
       }
     });
  }
  
}
    function getOptionsAJAX(value){
      var optionsArr=[] 
      
      $.ajax({
         url: "/procedures/"+value+".json",
         type: "GET",
         cache: false,
         async:false,
         processData: false, 
         success: function(json){
           $.each(json.procedure.options,function(k,value) { 
             var optionsObject={};
             optionsObject.value=value.option.value;
             optionsObject.description=value.option.description;
             optionsObject.id=value.option.id;
             optionsObject.types=[];

              $.each(value.option.types,function(key, value) {
                var typesObject={};
               typesObject.value=value.type.value;
               typesObject.location=lateralDirection(value.type.location);
               typesObject.description=value.type.description;
               typesObject.id=value.type.id;

               optionsObject.types.push(typesObject);
             });

             optionsArr.push(optionsObject);

           })
         },
         complete: function(){  console.log("AJAX Request complete"); }
       });
         return optionsArr;

    }

    function lateralDirection(value){
      laterality=[]
      switch (value.toLowerCase()){
        case "left":
          laterality.push("L");
          break;
        case "right": 
          laterality.push("R");
          break;
        case "both":
           laterality.push("L")
           laterality.push("R")
           break;
        default: "Error";
      }

      return laterality; 
    }
